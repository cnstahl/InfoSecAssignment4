We have an insecure database we want to make secure using only a small secure storage (the superblock). By secure we mean that the database will end up providing confidentiality and integrity but will not guarantee availability. 

The block store itself is implemented as a Merkle Tree. A Merkle Tree or hash tree stores information such that every “leaf node is labelled with the hash of a data block and every non-leaf node is labelled with the cryptographic hash of the labels of its child nodes.” In this implementation, data is also being stored in the non-leaf nodes. Since the hash of each node depends on the hash of its child, if any node changes, the hash at the top changes, which is useful in detecting adversary activity and providing integrity. For confidentiality, each node is encrypted with a key and a nonce, where the nonce is the number of the block (blockNum). A truly random nonce would be better but this suffices since it will be unique for each block. STORING KEY INFORMATION HERE. 

